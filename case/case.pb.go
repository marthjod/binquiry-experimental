// Code generated by protoc-gen-go. DO NOT EDIT.
// source: case/case.proto

package _case // import "github.com/marthjod/binquiry-experimental/case"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Case int32

const (
	Case_Nominative Case = 0
	Case_Accusative Case = 1
	Case_Dative     Case = 2
	Case_Genitive   Case = 3
)

var Case_name = map[int32]string{
	0: "Nominative",
	1: "Accusative",
	2: "Dative",
	3: "Genitive",
}
var Case_value = map[string]int32{
	"Nominative": 0,
	"Accusative": 1,
	"Dative":     2,
	"Genitive":   3,
}

func (x Case) String() string {
	return proto.EnumName(Case_name, int32(x))
}
func (Case) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_case_584f41cea3f6d792, []int{0}
}

func init() {
	proto.RegisterEnum("case.Case", Case_name, Case_value)
}

func init() { proto.RegisterFile("case/case.proto", fileDescriptor_case_584f41cea3f6d792) }

var fileDescriptor_case_584f41cea3f6d792 = []byte{
	// 147 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4f, 0x4e, 0x2c, 0x4e,
	0xd5, 0x07, 0x11, 0x7a, 0x05, 0x45, 0xf9, 0x25, 0xf9, 0x42, 0x2c, 0x20, 0xb6, 0x96, 0x03, 0x17,
	0x8b, 0x73, 0x62, 0x71, 0xaa, 0x10, 0x1f, 0x17, 0x97, 0x5f, 0x7e, 0x6e, 0x66, 0x5e, 0x62, 0x49,
	0x66, 0x59, 0xaa, 0x00, 0x03, 0x88, 0xef, 0x98, 0x9c, 0x5c, 0x5a, 0x0c, 0xe1, 0x33, 0x0a, 0x71,
	0x71, 0xb1, 0xb9, 0x40, 0xd8, 0x4c, 0x42, 0x3c, 0x5c, 0x1c, 0xee, 0xa9, 0x79, 0x99, 0x60, 0x1e,
	0xb3, 0x93, 0x41, 0x94, 0x5e, 0x7a, 0x66, 0x49, 0x46, 0x69, 0x92, 0x5e, 0x72, 0x7e, 0xae, 0x7e,
	0x6e, 0x62, 0x51, 0x49, 0x46, 0x56, 0x7e, 0x8a, 0x7e, 0x52, 0x66, 0x5e, 0x61, 0x69, 0x66, 0x51,
	0xa5, 0x6e, 0x6a, 0x45, 0x41, 0x6a, 0x51, 0x66, 0x6e, 0x6a, 0x5e, 0x49, 0x62, 0x0e, 0xd8, 0xfe,
	0x24, 0x36, 0xb0, 0x03, 0x8c, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0xdd, 0xf5, 0x8b, 0xb7, 0x93,
	0x00, 0x00, 0x00,
}
